AWS console
https://us-east-1.console.aws.amazon.com/ec2/home?region=us-east-1#Overview:

My IP (change in firewall from cafe)
curl https://checkip.amazonaws.com

SSH to ec2 (IP non static):
ssh -i ~/src/chatbot_sa/creds/aws/chatbot_sa_key.pem ubuntu@52.91.192.92

Check EC2 instance aliave
aws ec2 describe-instances --query "Reservations[*].Instances[*].{ID:InstanceId,State:State.Name}" --output table

Start EC2 instance
aws ec2 start-instances --instance-ids i-0adeaebf9f64d7233  

docker build
cd bot
docker build -t chatbot_sa_bot bot/

docker run
docker run --rm -it \
	--env-file /home/noams/src/chatbot_sa/.env \
	--name chatbot_sa_bot \
	chatbot_sa_bot

docker compose
docker compose --env-file .env up --build

docker compose run crawler
docker compose --env-file .env up -d db crawler

docker poll env variable
ubuntu@ip-172-31-31-222:~$ docker exec -it chatbot_sa_bot printenv | grep WEBHOOK_MODE

docker logs
docker-compose logs -f db crawler

docker debug after silent crash
docker compose run --rm crawler bash
python crawler.py

run act
act -j deploy --secret-file /home/noams/src/chatbot_sa/.env

Connect to db
docker exec -it vector_db psql -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-chatbot_sa}

Aws ECR details
{
    "repository": {
        "repositoryArn": "arn:aws:ecr:us-east-1:354918365739:repository/chatbot_sa",
        "registryId": "354918365739",
        "repositoryName": "chatbot_sa",
        "repositoryUri": "354918365739.dkr.ecr.us-east-1.amazonaws.com/chatbot_sa",
        "createdAt": 1744083946.661,
        "imageTagMutability": "MUTABLE",
        "imageScanningConfiguration": {
            "scanOnPush": false
        },
        "encryptionConfiguration": {
            "encryptionType": "AES256"
        }
    }
}